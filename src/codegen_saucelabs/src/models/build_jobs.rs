/*
 * Sauce Labs REST API
 *
 * This is a REST API documentation provided by Sauce Labs
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@saucelabs.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BuildJobs {
    #[serde(rename = "completed", skip_serializing_if = "Option::is_none")]
    pub completed: Option<i32>,
    #[serde(rename = "errored", skip_serializing_if = "Option::is_none")]
    pub errored: Option<i32>,
    #[serde(rename = "failed", skip_serializing_if = "Option::is_none")]
    pub failed: Option<i32>,
    #[serde(rename = "finished", skip_serializing_if = "Option::is_none")]
    pub finished: Option<i32>,
    #[serde(rename = "passed", skip_serializing_if = "Option::is_none")]
    pub passed: Option<i32>,
    #[serde(rename = "public", skip_serializing_if = "Option::is_none")]
    pub public: Option<i32>,
    #[serde(rename = "queued", skip_serializing_if = "Option::is_none")]
    pub queued: Option<i32>,
    #[serde(rename = "running", skip_serializing_if = "Option::is_none")]
    pub running: Option<i32>,
}

impl BuildJobs {
    pub fn new() -> BuildJobs {
        BuildJobs {
            completed: None,
            errored: None,
            failed: None,
            finished: None,
            passed: None,
            public: None,
            queued: None,
            running: None,
        }
    }
}


